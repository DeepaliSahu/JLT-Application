@*@model ProfileManagementApp.ViewModels.ProfileListViewModel*@

@model PagedList.IPagedList<ProfileManagementApp.ViewModels.ProfileViewModel>
@using PagedList.Mvc;




@{
    ViewBag.Title = "PROFILE MANAGEMENT APPLICATION";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="container" style="margin-top: 20px;">
    <h3>List of Profiles</h3>

    <div class="float-left">
        @Html.ActionLink("Create new Profile", "Create", null, new { @class = "btn btn-primary" })
    </div>
    <div class="float-right">
        @using (Html.BeginForm("Index", "Profile", FormMethod.Get))
        {
            <div class="input-group">
                Search NRIC/Name: @Html.TextBox("searchString", ViewBag.FilterValue as string)
                <input type="submit" value="Go!" />
            </div>
            }
     
    </div>

    <br />
    <table border="1" class="table table-bordered">
        <tr>
            <th>FirstName</th>
            <th>MiddleName</th>
            <th>LastName</th>
            <th>NRIC</th>
            <th>CurrentStatus</th>
            <th> Actions</th>
        </tr>

        @if (Model != null && Model.Count() > 0)
        {

            foreach (var profile in Model)
            {
                <tr>
                    <td>@profile.FirstName</td>
                    <td>@profile.MiddleName</td>
                    <td>@profile.LastName</td>
                    <td>@profile.NRIC</td>
                    <td>@profile.CurrentStatus</td>
                    <td>
                        <a class="btn btn-default btn-xs" href="@Url.Action("Edit", new { @id = profile.Id })"><span class="glyphicon glyphicon-edit"></span>Edit</a>

                  
                        <input type="submit" id="btnSubmit_" @profile.Id value="@(profile.IsActive.HasValue ? profile.IsActive ==true? "DeActivate" : "Activate": "Need Activation")" onclick="ChangeStatus(@profile.Id);" class="btn btn-default btn-xs" />

                    </td>
                </tr>
            }
        }
    </table>
    <br />
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize, currentFilter = ViewBag.CurrentFilter }))
    Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Products
    </div>

<script>

    


    function ChangeStatus(id) {
       // alert('Form has been submitted : ' + id);
    
         var url = '@Url.Action("UpdateStatus", "Profile")';
            $.post(url, {
                id: id
               
            }, function (result) {
                window.location.reload();

            });
    }
</script>
